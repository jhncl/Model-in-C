QFA<-c(QFA.I,QFA.P,QFA.D)
samp<-samp[[1]]
iter<-QFA$iter
thin<-QFA$thin

y<-QFA$y
x<-QFA$x

N<-QFA$N
M<-QFA$M
NoSum<-QFA$NoSum
NoORF<-QFA$NoORF
NoTime<-QFA$NoTime
gene<-QFA$gene
SHIFT<-QFA$SHIFT
###

K_clm=tau_K_cl=K_o_l=sigma_K_o=K_p=P=r_clm=tau_r_cl=r_o_l=sigma_r_o=r_p=nu_l=sigma_nu=nu_p=alpha_c=beta_c=delta_l=gamma_cl=sigma_gamma=omega_cl=sigma_omega=upsilon_c=sigma_upsilon=0
####
t=1
#K_clm
for (i in 1:M)
{
j=i
K_clm[t]=mean(samp[,i]);t=t+1
}

t=1
#tau_K_cl
j=M+1
for (i in (2*M+9*L+15):(2*M+11*L+14))
{
tau_K_cl[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#K_o_l
j=M+2*L+1
for (i in (M+1):(M+L))
{
K_o_l[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#sigma_K_o
i=2*M+9*L+9
j=M+3*L+1
sigma_K_o=mean(samp[,i])

t=1
#K_p
i=M+L+1
j=M+3*L+2
K_p=mean(samp[,i])

t=1
#P
i=M+L+2
j=M+3*L+3
P=mean(samp[,i])

t=1
#r_clm
j=M+3*L+4
for (i in (M+8*L+8):(2*M+8*L+7))
{
r_clm[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#tau_r_cl
j=2*M+3*L+4
for (i in (2*M+11*L+15):(2*M+13*L+14))
{
tau_r_cl[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#r_o_l
j=2*M+5*L+4
for (i in (2*M+8*L+8):(2*M+9*L+7))
{
r_o_l[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#sigma_r_o
i=2*M+9*L+13
j=2*M+6*L+4
sigma_r_o=mean(samp[,i])

t=1
#r_p
i=2*M+9*L+8
j=2*M+6*L+5
r_p=mean(samp[,i])


t=1
#nu_l
j=2*M+6*L+6
for (i in (M+5*L+7):(M+6*L+6))
{
nu_l[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#sigma_nu
i=2*M+9*L+11
j=2*M+7*L+6
sigma_nu=mean(samp[,i])

t=1
#nu_p
i=M+6*L+7
j=2*M+7*L+7
nu_p=mean(samp[,i])

t=1
#alpha_c
i=M+L+4
j=2*M+7*L+8
alpha_c=mean(samp[,i])

t=1
#beta_c
i=M+L+6
j=2*M+7*L+9
beta_c=mean(samp[,i])

t=1
#delta_l
j=2*M+7*L+10
for (i in (M+2*L+7):(M+3*L+6))
{
delta_l[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#gamma_cl
j=2*M+8*L+10
for (i in (M+4*L+7):(M+5*L+6))
{
gamma_cl[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#sigma_gamma
i=2*M+9*L+10
j=2*M+9*L+10
sigma_gamma=mean(samp[,i])

t=1
#omega_cl
j=2*M+9*L+11
for (i in (M+7*L+8):(M+8*L+7))
{
omega_cl[t]=mean(samp[,i]);t=t+1
j=j+1
}

t=1
#sigma_omega
i=2*M+9*L+12
j=2*M+10*L+11
sigma_omega=mean(samp[,i])

#upsilon_c
i=2*M+13*L+16
j=2*M+10*L+12
upsilon_c=mean(samp[,i])


t=1
#sigma_upsilon
i=2*M+9*L+14
j=2*M+10*L+13
sigma_upsilon=mean(samp[,i])



K<-exp(K_p)
K_i<-exp(K_o_l)
K_ij<-exp(K_clm)
PO<-exp(P)
r<-exp(r_p)
r_i<-exp(r_o_l)
r_ij<-exp(r_clm)

taui<-exp(nu_l)
tau<-exp(nu_p)
gam<-gamma_cl
omega<-omega_cl
nuc<-exp(upsilon_c)

gamdelt=0
j=2*M+7*L+10
jj=2*M+8*L+10
ii=M+4*L+7
for (i in (M+2*L+7):(M+3*L+6))
{
gamdelt[t]=mean(samp[,i]*samp[,ii]);t=t+1
j=j+1
ii=i+1
jj=j+1
}

omegadelt=0
j=2*M+7*L+10
jj=2*M+9*L+11
ii=M+7*L+8
for (i in (M+2*L+7):(M+3*L+6))
{
omegadelt[t]=mean(samp[,i]*samp[,ii]);t=t+1
j=j+1
ii=i+1
jj=j+1
}

delta<-delta_l
A1<-1
A2<-exp(alpha_c)
B1<-1
B2<-exp(beta_c)
sig<-sum(rep(1,N)[delta>0.1])
order<-order(1-delta)
vecorder<-order(1-delta)[1:sig]
K_ij[K_ij<2*PO]=PO+0.001
vecMDRa<-r_ij/log(2*(K_ij-PO)/(K_ij-2*PO)) #MDR
vecMDPa<-log(K_ij/PO)/log(2) #MDP
Mu=vecMDPa*vecMDRa


Mu_a<-Mu[1:sum(NoORF[,1])]
veca<-vecb<-matrix(NA,N,max(NoORF))
Mu_b<-Mu[(1+sum(NoORF[,1])):sum(NoORF)]
mu_a=mu_b=0
for (i in 1:N){
mu_a[i]<-mean(Mu_a[(1+NoSum[i,1]):NoSum[i+1,1]])
mu_b[i]<-mean(Mu_b[(1+NoSum[i,2]):NoSum[i+1,2]])
}
limmin<-0
limmax<-max(na.omit(Mu))
pdf("JHM100plot.pdf")

plot(1,type="n",main=paste("Treatment",Treat,"Degrees"),ylim=c(limmin,limmax),xlim=c(limmin,limmax),xlab="Control",ylab="Query",pch=19,col=8,cex=0.5)
lines(c(-1000,10000),c(-1000,10000),lwd=2,col="grey",lty=2)
abline(lm(mu_b~0+mu_a),col="grey",lty=3)
if (sum((1:N)[gene=="HIS3"])==1){
lines(c(mu_a[gene=="HIS3"],mu_b[gene=="HIS3"]),c(-1000,1000),lwd=2)
lines(c(-1000,1000),c(mean(defb[gene=="HIS3"]),mean(defb[gene=="HIS3"])),lwd=2)}
i=1:N
points(mu_a[i],mu_b[i],main=paste("Treatment",Treat,"Degrees","(Conditioning on deltas=1)"),ylim=c(limmin,limmax),xlim=c(limmin,limmax),xlab="Single (=Alpha1*mu_i)",ylab="Double (=Alpha2*(mu_i+gamma_i))",col=8,pch=19,cex=0.5)

i=vecorder[gamdelt[order][1:sig]>0]
points(mu_a[i],(mu_b[i]),ylim=c(limmin,limmax),xlim=c(limmin,limmax),xlab="Single",ylab="Double",col=3,pch=19,cex=0.5)

i=vecorder[gamdelt[order][1:sig]<=0]  
points(mu_a[i],(mu_b[i]),ylim=c(limmin,limmax),xlim=c(limmin,limmax),xlab="Single",ylab="Double",col=2,pch=19,cex=0.5)
i=vecorder
text(mu_a[i],(mu_b[i]),gene[i],pos=4,offset=0.1,cex=0.4)
legend(1,limmax, c("1-1","simple Lin Reg"), cex=0.5,col=c("grey","grey","black"), lty=c(1,2,3,1))
if (sum((1:N)[gene=="HIS3"])==1){
legend(1,limmax, c("1-1","simple Lin Reg","HIS3 Fit"), cex=0.5,col=c("grey","grey","black"), lty=c(2,3,1))
}

dev.off()
